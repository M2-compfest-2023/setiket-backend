// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Users {
  id              String           @id @default(uuid())
  name            String           @db.VarChar(100)
  username        String           @unique @db.VarChar(100)
  email           String           @unique @db.VarChar(100)
  password        String           @db.VarChar(100)
  user_type       UserType
  created_at      DateTime         @default(now())
  updated_at      DateTime         @updatedAt

  administrators  Administrator[]
  customers       Customer[]
  eventOrganizers EventOrganizer[]
}

model Administrator {
  id      Int    @id @default(autoincrement())
  user_id String @unique

  user    Users  @relation(fields: [user_id], references: [id])
}

model Customer {
  id        Int              @id @default(autoincrement())
  user_id   String           @unique
  purchases TicketPurchase[]

  user      Users            @relation(fields: [user_id], references: [id])
}

model EventOrganizer {
  id                Int      @id @default(autoincrement())
  user_id           String   @unique
  organization_name String
  verified          Boolean  @default(false)
  created_at        DateTime @default(now())
  updated_at        DateTime @updatedAt
  events            Event[]

  user              Users    @relation(fields: [user_id], references: [id])
}

model Category {
  id            Int      @id @default(autoincrement())
  category_name String   @db.VarChar(50)
  created_at    DateTime @default(now())
  updated_at    DateTime @updatedAt
  events        Event[]
}

model Event {
  id           Int            @id @default(autoincrement())
  title        String         @db.VarChar(100)
  description  String?        @db.VarChar(255)
  event_date   DateTime
  location     String         @db.VarChar(100)
  ticket_total Int            @default(0)
  category_id  Int
  organizer_id Int
  verified     Boolean
  created_at   DateTime       @default(now())
  updated_at   DateTime       @updatedAt
  tickets      Ticket[]

  organizer    EventOrganizer @relation(fields: [organizer_id], references: [id])
  category     Category       @relation(fields: [category_id], references: [id])
}

model TicketPurchase {
  id            Int      @id @default(autoincrement())
  customer_id   Int
  ticket_id     Int
  purchase_date DateTime @default(now())

  customer      Customer @relation(fields: [customer_id], references: [id])
  ticket        Ticket   @relation(fields: [ticket_id], references: [id])
}

model Ticket {
  id        Int              @id @default(autoincrement())
  price     Int              @default(0)
  event_id  Int
  purchases TicketPurchase[]

  event     Event            @relation(fields: [event_id], references: [id])
}

enum UserType {
  ADMIN
  CUSTOMER
  EVENTORGANIZER
}